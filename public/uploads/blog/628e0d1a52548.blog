<h1>Bài 1: Chuỗi trong C++ là gì?</h1><h2><strong>Chuỗi trong C++ là gì</strong></h2><p>Trong ngôn ngữ C++, có một kiểu dữ liệu gọi là&nbsp;kiểu char&nbsp;( char là viết tắt của character). Đây là kiểu dữ liệu có kích thước bộ nhớ là 1 byte. Vì 1 byte là đơn vị nhỏ nhất nên có thể nói char là loại có kích thước bộ nhớ nhỏ nhất.</p><p>Khi chúng ta nối các ký tự (char) trong C++ lại với nhau thì sẽ được một&nbsp;<strong>chuỗi ký tự</strong>&nbsp;hay còn gọi là&nbsp;<strong>chuỗi string trong C++</strong>. Và bằng cách sử dụng chuỗi ký tự này, chúng ta có thể tạo ra được&nbsp;<strong>chuỗi trong C++</strong>.</p><p>Để thao tác với chuỗi string trong C++, chúng ta có thể sử dụng tới tính năng&nbsp;<strong>std::string</strong>&nbsp;trong thư viện chuẩn của C++, hoặc là có thể sử dụng tới&nbsp;<strong>mảng chuỗi</strong>&nbsp;được kế thừa từ ngôn ngữ C. Và trước khi học cách sử dụng&nbsp;<strong>std::string</strong>&nbsp;thì chúng ta sẽ cùng học cách thao tác với chuỗi trong C++ bằng mảng chuỗi trong chuyên mục này.</p><p>Mảng trong C++&nbsp;được sử dụng để xử lý các dữ liệu có cùng kiểu. Khi chúng ta chỉ định kiểu của mảng là kiểu char, khi đó chúng ta sẽ tạo ra&nbsp;<strong>mảng chuỗi</strong>&nbsp;và dùng nó để biểu diễn chuỗi ký tự trong C++.</p><p>Ví dụ như chúng ta khởi tạo chuỗi s bằng cách viết&nbsp;<code style="background-color: rgb(249, 242, 244); color: rgb(51, 51, 51);">char s[4]</code>, có ý nghĩa là một mảng chứa 4 ký tự char tạo nên chuỗi s chẳng hạn.</p><p>Lại nữa,&nbsp;<strong>chuỗi trong C++</strong>&nbsp;không đơn giản chỉ là một mảng chứa các ký tự, mà nó phải tuân theo một quy tắc là&nbsp;<strong>phải kết thúc một chuỗi bởi một ký tự đặc biệt là&nbsp;</strong><code style="background-color: rgb(249, 242, 244); color: rgb(51, 51, 51);"><strong>\0</strong></code>. Đây còn được gọi là ký tự Null, có tác dụng kết thúc một chuỗi ký tự trong chương trình C++.</p><h2><strong>Khởi tạo chuỗi trong C++</strong></h2><p>Để khởi tạo chuỗi trong C++, chúng ta sử dụng từ khoá&nbsp;<strong>char</strong>&nbsp;và chỉ định số ký tự có trong chuỗi đó cùng giá trị ban đầu, với cú pháp sau đây:</p><p>char s[length] =&nbsp;<code style="background-color: rgb(249, 242, 244); color: rgb(51, 51, 51);">"string";</code></p><p>Trong đó</p><ul><li><code style="background-color: rgb(249, 242, 244); color: rgb(51, 51, 51);">s</code>&nbsp;là tên chuỗi</li><li><code style="background-color: rgb(249, 242, 244); color: rgb(51, 51, 51);">length</code>&nbsp;là độ dài hay còn gọi là số ký tự có trong chuỗi&nbsp;<code style="background-color: rgb(249, 242, 244); color: rgb(51, 51, 51);">s</code>, và giá trị này có thể lược bỏ khi khởi tạo chuỗi. Nếu lược bỏ thì giá trị&nbsp;<code style="background-color: rgb(249, 242, 244); color: rgb(51, 51, 51);">length</code>&nbsp;sẽ tự động lấy bằng độ dài của chuỗi ký tự ban đầu được gán vào chuỗi.</li><li><code style="background-color: rgb(249, 242, 244); color: rgb(51, 51, 51);">string</code>&nbsp;ở đây là chuỗi ký tự ban đầu được gán vào chuỗi s.</li></ul><p>Lưu ý là chuỗi trong C++ cần được kết thúc bởi ký tự&nbsp;<code style="background-color: rgb(249, 242, 244); color: rgb(51, 51, 51);">\0</code>, do đó giá trị của&nbsp;<code style="background-color: rgb(249, 242, 244); color: rgb(51, 51, 51);">num</code>&nbsp;luôn phải lớn hơn số ký tự trong chuỗi ký tự&nbsp;<code style="background-color: rgb(249, 242, 244); color: rgb(51, 51, 51);">string</code>&nbsp;là 1 đơn vị.</p><p>Hoặc là chúng ta có thể lược bỏ đi đối số&nbsp;<code style="background-color: rgb(249, 242, 244); color: rgb(51, 51, 51);">length</code>&nbsp;luôn như sau:</p><pre class="ql-syntax" spellcheck="false">char s[] = "love";
</pre><p>Lại nữa, do chuỗi ký tự có thể được biểu diến thông qua tập hợp các ký tự, nên chúng ta có 2 cách viết để gán một chuỗi ký tự cho một chuỗi trong C++. Ví dụ chúng ta gán chuỗi ký tự&nbsp;<code style="background-color: rgb(249, 242, 244); color: rgb(51, 51, 51);">"love"</code>&nbsp;vào chuỗi s mới khởi tạo ở trên với 2 cách sau:</p><p>Một là sử dụng chuỗi ký tự. Ví dụ:</p><p>char s[] =&nbsp;<code style="background-color: rgb(249, 242, 244); color: rgb(51, 51, 51);">"love";</code></p><p>Hai là sử dụng tập hợp các ký tự kết hợp với ký tự đặc biệt là&nbsp;<code style="background-color: rgb(249, 242, 244); color: rgb(51, 51, 51);">\0</code>&nbsp;như sau:</p><p>char s[] =&nbsp;<code style="background-color: rgb(249, 242, 244); color: rgb(51, 51, 51);">{ 'l', 'o', 'v', 'e', '\0' }</code>;</p><p><span style="color: rgb(51, 51, 51);">Cách viết thứ nhất thì đơn giản là chúng ta gán trực tiếp chuỗi ký tự vào chuỗi mới tạo ra. Còn cách thứ 2 thì chúng ta sẽ đặt tập hợp các ký tự tạo nên chuỗi cũng như ký tự kết thúc chuỗi&nbsp;</span><code style="color: rgb(51, 51, 51); background-color: rgb(249, 242, 244);">\0</code><span style="color: rgb(51, 51, 51);">&nbsp;vào giữa cặp dấu ngoặc nhọn&nbsp;</span><code style="color: rgb(51, 51, 51); background-color: rgb(249, 242, 244);">{}</code><span style="color: rgb(51, 51, 51);">&nbsp;như trên.</span></p>