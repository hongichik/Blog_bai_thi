<h1>Bài 1:&nbsp;Kiểu dữ liệu string trong C++</h1><h2><strong>Kiểu dữ liệu string trong C++</strong></h2><p>Trong ngôn ngữ C++, có một kiểu dữ liệu gọi là&nbsp;kiểu char (kiểu ký tự)&nbsp;( char là viết tắt của character). Đây là kiểu dữ liệu có kích thước bộ nhớ là 1 byte. Vì 1 byte là đơn vị nhỏ nhất nên có thể nói char là loại có kích thước bộ nhớ nhỏ nhất.</p><p>Khi chúng ta nối các ký tự (char) trong C++ lại với nhau thì sẽ được một&nbsp;<strong>chuỗi ký tự</strong>. Ví dụ như&nbsp;<em>“Hello”</em>&nbsp;là một chuỗi ký tự được tạo bởi các ký tự đơn chẳng hạn.</p><p>Và chúng ta gọi loại dữ liệu được tạo thành bởi tập hợp các ký tự đơn như vậy là&nbsp;kiểu dữ liệu string trong C++ hay còn gọi là&nbsp;<strong>chuỗi string trong C++</strong>.</p><p>Để&nbsp;<strong>xử lý chuỗi string trong C++</strong>, chúng ta có thể sử dụng tới&nbsp;<strong>mảng ký tự</strong>&nbsp;được kế thừa từ ngôn ngữ C, hoặc là sử dụng tới&nbsp;std::string&nbsp;là một&nbsp;<strong>trình bao bọc để xử lý chuỗi thuận tiện</strong>&nbsp;mới được thêm vào C++.</p><p>Về&nbsp;<strong>cách sử dụng string trong c++</strong>&nbsp;bằng mảng ký tự thì Kiyoshi đã phân tích rất kỹ trong loạt bài tại chuyên đề Chuỗi trong C&nbsp; rồi. Trong phần này, chúng ta sẽ tập trung về phương pháp mới, đó là sử dụng&nbsp;<em>std::string</em>&nbsp;để&nbsp;<strong>xử lý chuỗi string trong c++</strong>.</p><p>Ưu điểm lớn nhất của&nbsp;<strong>std::string</strong>&nbsp;đó chính là khả năng tự thay đổi kích thước.</p><p>Mặc dù chúng ta có thể sử dụng&nbsp;<strong>mảng ký tự</strong>&nbsp;để xử lý chuỗi string trong C++, tuy nhiên khác với&nbsp;<strong>mảng ký tự</strong>&nbsp;có kích thước cố định và chúng ta rất khó có thể thao tác và thay đổi kích thước của chuỗi string lưu trong nó, thì kích thước của std::string là kích thước động, do vậy chúng ta có thể linh hoạt hơn khi xử lý chuỗi ký tự được lưu trong nó.</p><p><strong>std::string</strong>&nbsp;được cài sẵn trong header file&nbsp;<strong>string</strong>&nbsp;và để sử dụng được chức năng này, chúng ta cần thêm dòng&nbsp;<code style="background-color: rgb(249, 242, 244); color: rgb(51, 51, 51);">「#include &lt;string&gt;」</code>&nbsp;vào đầu chương trình.</p><p>Ví dụ:</p><pre class="ql-syntax" spellcheck="false">#include &lt;string&gt;   
int main()
{
    std::string str1;
    std::string str2;  
}
</pre><p>Lại nữa, namespace của&nbsp;<strong>std::string</strong>&nbsp;là std, do đó bằng cách khai báo sử dụng namespace này vào đầu chương trình mà chúng ta có thể viết gọn&nbsp;<strong>std::string</strong>&nbsp;trong chương trình như sau:</p><pre class="ql-syntax" spellcheck="false">#include &lt;string&gt;   
using namespace std;
int main()
{
    string str1;
    string str2; 
}
</pre><h2><strong>Khai báo string trong C++</strong></h2><h3><strong>Khai báo một string trong C++</strong></h3><p>Để khai báo string trong C++, chúng ta viết tên biến đằng sau dòng&nbsp;<em>std::string</em>&nbsp;như sau:</p><p>std::string str;</p><p>Trong trường hợp đã khai báo namespace std vào đầu chương trình, chúng ta cũng có thể lược bỏ dòng&nbsp;<code style="background-color: rgb(249, 242, 244); color: rgb(51, 51, 51);">std::</code>&nbsp;và dùng cú pháp khai báo string như sau:</p><p>using namespace std;</p><p>string str;</p><p><br></p>