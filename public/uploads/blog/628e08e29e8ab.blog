<h1>Bài 1: Khai báo và gọi hàm trong C++</h1><h2><strong>Khai báo hàm trong C++</strong></h2><p>Trong bài viết Hàm trong C++&nbsp;bạn đã biết có 3 loại hàm trong C++, trong đó có một loại hàm mà chúng ta có thể tự tạo hàm để sử dụng trong chương trình, đó chính là&nbsp;<em>hàm C++ do người dùng định nghĩa</em>.</p><p>Khi muốn sử dụng một hàm C++ do người dùng định nghĩa, trước hết chúng ta cần&nbsp;<strong>khai báo hàm trong C++</strong>.</p><p>Chúng ta viết&nbsp;<strong>kiểu dữ liệu</strong>&nbsp;trả về từ hàm trước, sau đó đến&nbsp;<strong>tên hàm</strong>, rồi kiểu và tên của các&nbsp;<strong>tham số</strong>&nbsp;sử dụng trong hàm, và cuối cùng là các&nbsp;<strong>xử lý trong hàm</strong>&nbsp;nằm giữa cặp ngoặc nhọn&nbsp;<code style="background-color: rgb(249, 242, 244); color: rgb(51, 51, 51);">{}</code>&nbsp;cùng với&nbsp;<strong>giá trị trả về</strong>, với cú pháp hàm như sau:</p><p><code style="background-color: rgb(249, 242, 244); color: rgb(51, 51, 51);">kiểu trả về</code>&nbsp;<code style="background-color: rgb(249, 242, 244); color: rgb(51, 51, 51);">tên hàm</code>&nbsp;(<code style="background-color: rgb(249, 242, 244); color: rgb(51, 51, 51);">kiểu 1</code>&nbsp;<code style="background-color: rgb(249, 242, 244); color: rgb(51, 51, 51);">tham số 1</code>,&nbsp;<code style="background-color: rgb(249, 242, 244); color: rgb(51, 51, 51);">kiểu 2</code>&nbsp;<code style="background-color: rgb(249, 242, 244); color: rgb(51, 51, 51);">tham số 2</code>,&nbsp;<code style="background-color: rgb(249, 242, 244); color: rgb(51, 51, 51);">...</code>){</p><p>&nbsp;&nbsp;&nbsp;&nbsp;Câu lệnh 1 trong hàm;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;Câu lệnh 2 trong hàm;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;<code style="background-color: rgb(249, 242, 244); color: rgb(51, 51, 51);">...</code></p><p>&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;<code style="background-color: rgb(249, 242, 244); color: rgb(51, 51, 51);">giá trị trả về</code></p><p>}</p><p>Lại nữa, nếu một hàm không cần nhận giá trị truyền vào từ bên ngoài thì chúng ta cũng có thể lược bỏ tham số khi khai báo hàm trong C++ như sau:</p><p><code style="background-color: rgb(249, 242, 244); color: rgb(51, 51, 51);">kiểu trả về</code>&nbsp;<code style="background-color: rgb(249, 242, 244); color: rgb(51, 51, 51);">tên hàm</code>&nbsp;(){</p><p>&nbsp;&nbsp;&nbsp;&nbsp;Câu lệnh 1 trong hàm;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;Câu lệnh 2 trong hàm;</p><p>&nbsp;&nbsp;&nbsp;&nbsp;<code style="background-color: rgb(249, 242, 244); color: rgb(51, 51, 51);">...</code></p><p>&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;<code style="background-color: rgb(249, 242, 244); color: rgb(51, 51, 51);">giá trị trả về</code></p><p>}</p><h2><strong>Gọi hàm trong C++</strong></h2><p>Sau khi khai báo hàm trong C++, chúng ta có thể sử dụng hàm đó nhiều lần trong chương trình bằng cách&nbsp;<strong>gọi hàm trong C++</strong>&nbsp;với cú pháp sau đây:</p><p><code style="background-color: rgb(249, 242, 244); color: rgb(51, 51, 51);">tên hàm</code>&nbsp;(&nbsp;<code style="background-color: rgb(249, 242, 244); color: rgb(51, 51, 51);">đối số 1</code>,&nbsp;<code style="background-color: rgb(249, 242, 244); color: rgb(51, 51, 51);">đối số 2</code>,<code style="background-color: rgb(249, 242, 244); color: rgb(51, 51, 51);">...</code>);</p><p>Chúng ta viết tên hàm, sau đó đặt các đối số (các giá trị truyền vào khi gọi hàm) ở giữa cặp dấu ngoặc đơn&nbsp;<code style="background-color: rgb(249, 242, 244); color: rgb(51, 51, 51);">()</code>&nbsp;và cách nhau bởi dấu phẩy&nbsp;<code style="background-color: rgb(249, 242, 244); color: rgb(51, 51, 51);">,</code>. Các giá trị của đối số sẽ được dùng để&nbsp;<em>truyền tham số trong C++</em>.</p><p>Lưu ý, chúng ta gọi các biến dùng để khai báo hàm là tham số, còn các giá trị thực truyền vào khi gọi hàm là đối số. Giá trị của các đối số sẽ được các tham số tương ứng nhận và thực hiện các xử lý ở bên trong hàm.</p><p>Việc các tham số bên trong hàm nhận các đối số từ bên ngoài hàm được gọi là truyền tham số trong C++. Chi tiết về tham số và đối số trong C++ bạn có thể xem tại bài viết Hàm trong C++.</p><p><br></p>